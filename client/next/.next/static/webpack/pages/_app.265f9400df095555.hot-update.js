"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/redux/features/grid/gridSlice.js":
/*!**********************************************!*\
  !*** ./src/redux/features/grid/gridSlice.js ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nodeEnd\": function() { return /* binding */ nodeEnd; },\n/* harmony export */   \"nodeStart\": function() { return /* binding */ nodeStart; },\n/* harmony export */   \"nodeVisited\": function() { return /* binding */ nodeVisited; },\n/* harmony export */   \"nodeWeight\": function() { return /* binding */ nodeWeight; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n\nconst NUM_ROWS = 10;\nconst NUM_COLS = 10;\nfunction createGrid(rows, cols) {\n    // create an empty starting grid of nodes\n    const grid = [];\n    let count = 0;\n    for(let r = 0; r < rows; r++){\n        let row = [];\n        for(let c = 0; c < cols; c++){\n            row.push({\n                id: count,\n                x: r,\n                y: c,\n                weight: 1,\n                visited: false,\n                start: false,\n                end: false\n            });\n            count += 1;\n        }\n        grid.push(row);\n    }\n    return grid;\n}\nconst initialState = {\n    grid: createGrid(NUM_COLS, NUM_ROWS),\n    startNode: null,\n    endNode: null\n};\n// createSlice uses \"immer\" which lets us write \"immutbale\" code, but its really just making a copy\nconst gridSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"grid\",\n    initialState,\n    reducers: {\n        nodeVisited: {\n            // prepare sends to reducer\n            // can call nodeVisited(x,y)\n            reducer (state, action) {\n                const { x , y  } = action.payload;\n                state.grid[x][y].visited = true;\n            },\n            prepare (x, y) {\n                return {\n                    payload: {\n                        x,\n                        y\n                    }\n                };\n            }\n        },\n        nodeStart: {\n            reducer (state, action) {\n                // set => True or False.\n                // whether setting or unsetting\n                const { x , y , set  } = action.payload;\n                state.grid[x][y].start = set;\n            },\n            prepare (x, y, set) {\n                return {\n                    payload: {\n                        x,\n                        y,\n                        set\n                    }\n                };\n            }\n        },\n        nodeEnd: {\n            reducer (state, action) {\n                const { x , y , set  } = action.payload;\n                state.grid[x][y].end = set;\n            },\n            prepare (x, y, set) {\n                return {\n                    payload: {\n                        x,\n                        y,\n                        set\n                    }\n                };\n            }\n        },\n        nodeWeight: {\n            reducer (state, action) {\n                const { x , y  } = action.payload;\n                state.grid[x][y].end = true;\n            },\n            prepare (x, y, weight) {\n                return {\n                    payload: {\n                        x,\n                        y,\n                        weight\n                    }\n                };\n            }\n        }\n    }\n});\nconst { nodeVisited , nodeStart , nodeEnd , nodeWeight  } = gridSlice.actions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (gridSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNIYyxTQUFTO3dCQUFDaEI7d0JBQUdDO3dCQUFHQztvQkFBTTtnQkFDMUI7WUFDSjtRQUNKO0lBQ0o7QUFDSjtBQUVPLE1BQU0sRUFBRVUsWUFBVyxFQUFFTSxVQUFTLEVBQUVFLFFBQU8sRUFBRUMsV0FBVSxFQUFFLEdBQUdaLFVBQVVhLE9BQU8sQ0FBQztBQUNqRiwrREFBZWIsVUFBVUksT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9yZWR1eC9mZWF0dXJlcy9ncmlkL2dyaWRTbGljZS5qcz85NTZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNsaWNlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcblxuY29uc3QgTlVNX1JPV1MgPSAxMDtcbmNvbnN0IE5VTV9DT0xTID0gMTA7XG5cbmZ1bmN0aW9uIGNyZWF0ZUdyaWQocm93cywgY29scykge1xuICAgIC8vIGNyZWF0ZSBhbiBlbXB0eSBzdGFydGluZyBncmlkIG9mIG5vZGVzXG4gICAgY29uc3QgZ3JpZCA9IFtdO1xuICAgIGxldCBjb3VudCA9IDA7XG4gICAgZm9yIChsZXQgciA9IDA7IHIgPCByb3dzOyByKyspIHtcbiAgICAgICAgbGV0IHJvdyA9IFtdO1xuICAgICAgICBmb3IgKGxldCBjID0gMDsgYyA8IGNvbHM7IGMgKyspIHtcbiAgICAgICAgICAgIHJvdy5wdXNoKFxuICAgICAgICAgICAgICAgIHtpZDogY291bnQsIHg6IChyKSwgeTogKGMpLCB3ZWlnaHQ6IDEsIHZpc2l0ZWQ6IGZhbHNlLCBzdGFydDogZmFsc2UsIGVuZDogZmFsc2V9XG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgfVxuICAgICAgICBncmlkLnB1c2gocm93KTtcbiAgICB9XG4gICAgcmV0dXJuIGdyaWQ7XG59XG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgICBncmlkOiBjcmVhdGVHcmlkKE5VTV9DT0xTLCBOVU1fUk9XUyksXG4gICAgc3RhcnROb2RlOiBudWxsLFxuICAgIGVuZE5vZGU6IG51bGxcbn1cblxuLy8gY3JlYXRlU2xpY2UgdXNlcyBcImltbWVyXCIgd2hpY2ggbGV0cyB1cyB3cml0ZSBcImltbXV0YmFsZVwiIGNvZGUsIGJ1dCBpdHMgcmVhbGx5IGp1c3QgbWFraW5nIGEgY29weVxuY29uc3QgZ3JpZFNsaWNlID0gY3JlYXRlU2xpY2Uoe1xuICAgIG5hbWU6ICdncmlkJyxcbiAgICBpbml0aWFsU3RhdGUsXG4gICAgcmVkdWNlcnM6IHtcbiAgICAgICAgbm9kZVZpc2l0ZWQ6IHtcbiAgICAgICAgICAgIC8vIHByZXBhcmUgc2VuZHMgdG8gcmVkdWNlclxuICAgICAgICAgICAgLy8gY2FuIGNhbGwgbm9kZVZpc2l0ZWQoeCx5KVxuICAgICAgICAgICAgcmVkdWNlcihzdGF0ZSwgYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyB4LCB5IH0gPSBhY3Rpb24ucGF5bG9hZDtcbiAgICAgICAgICAgICAgICBzdGF0ZS5ncmlkW3hdW3ldLnZpc2l0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByZXBhcmUoeCwgeSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHBheWxvYWQ6IHt4LCB5fVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgbm9kZVN0YXJ0OiB7XG4gICAgICAgICAgICByZWR1Y2VyKHN0YXRlLCBhY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAvLyBzZXQgPT4gVHJ1ZSBvciBGYWxzZS5cbiAgICAgICAgICAgICAgICAvLyB3aGV0aGVyIHNldHRpbmcgb3IgdW5zZXR0aW5nXG4gICAgICAgICAgICAgICAgY29uc3QgeyB4LCB5LCBzZXQgfSA9IGFjdGlvbi5wYXlsb2FkO1xuICAgICAgICAgICAgICAgIHN0YXRlLmdyaWRbeF1beV0uc3RhcnQgPSBzZXQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHJlcGFyZSh4LCB5LCBzZXQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBwYXlsb2FkOiB7eCwgeSwgc2V0fVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgbm9kZUVuZDoge1xuICAgICAgICAgICAgcmVkdWNlcihzdGF0ZSwgYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyB4LCB5LCBzZXQgfSA9IGFjdGlvbi5wYXlsb2FkO1xuICAgICAgICAgICAgICAgIHN0YXRlLmdyaWRbeF1beV0uZW5kID0gc2V0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByZXBhcmUoeCwgeSwgc2V0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgcGF5bG9hZDoge3gsIHksIHNldH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG5vZGVXZWlnaHQ6IHtcbiAgICAgICAgICAgIHJlZHVjZXIoc3RhdGUsIGFjdGlvbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgeCwgeSB9ID0gYWN0aW9uLnBheWxvYWQ7XG4gICAgICAgICAgICAgICAgc3RhdGUuZ3JpZFt4XVt5XS5lbmQgPSB0cnVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByZXBhcmUoeCwgeSwgd2VpZ2h0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgcGF5bG9hZDoge3gsIHksIHdlaWdodH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxufSlcblxuZXhwb3J0IGNvbnN0IHsgbm9kZVZpc2l0ZWQsIG5vZGVTdGFydCwgbm9kZUVuZCwgbm9kZVdlaWdodCB9ID0gZ3JpZFNsaWNlLmFjdGlvbnM7XG5leHBvcnQgZGVmYXVsdCBncmlkU2xpY2UucmVkdWNlcjsiXSwibmFtZXMiOlsiY3JlYXRlU2xpY2UiLCJOVU1fUk9XUyIsIk5VTV9DT0xTIiwiY3JlYXRlR3JpZCIsInJvd3MiLCJjb2xzIiwiZ3JpZCIsImNvdW50IiwiciIsInJvdyIsImMiLCJwdXNoIiwiaWQiLCJ4IiwieSIsIndlaWdodCIsInZpc2l0ZWQiLCJzdGFydCIsImVuZCIsImluaXRpYWxTdGF0ZSIsInN0YXJ0Tm9kZSIsImVuZE5vZGUiLCJncmlkU2xpY2UiLCJuYW1lIiwicmVkdWNlcnMiLCJub2RlVmlzaXRlZCIsInJlZHVjZXIiLCJzdGF0ZSIsImFjdGlvbiIsInBheWxvYWQiLCJwcmVwYXJlIiwibm9kZVN0YXJ0Iiwic2V0Iiwibm9kZUVuZCIsIm5vZGVXZWlnaHQiLCJhY3Rpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/redux/features/grid/gridSlice.js\n"));

/***/ })

});